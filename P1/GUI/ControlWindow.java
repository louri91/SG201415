
package GUI;

import javax.media.j3d.Canvas3D;
import Model.*;
import java.awt.Dimension;
import java.awt.Point;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import javax.swing.JFrame;

/**
 *
 * @author fvelasco
 */
public class ControlWindow extends JFrame 
{
    private TheUniverse universe;
    private Sonido sonidoAmbiente;
    private Camara cam;
    private Camara cam2;
    private Camara cam3;
    private Camara camP;
    private boolean ac1,ac2,ac3;
    public ControlWindow(Canvas3D canvas, Canvas3D canvas2, Camara paralela, Camara camara,Camara camara1, Camara camara2, TheUniverse anUniverse) {
        super();
        cam=camara;
        cam2 = camara1;
        cam3 = camara2;
        cam.activar();
        camP = paralela;
        camP.activar();
        ac1=true;
        ac2=false;
        ac3=false;
        universe = anUniverse;
        initComponents();
        setLocation (920, 100);
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                closeApp(0);
            }
        });
        Dimension d = new Dimension(650,650);
        Point p = new Point(25,25);
        Visualization visualization = new Visualization (this, false, canvas, d, p);
        visualization.setVisible(true);
        
        Dimension d2 = new Dimension(400,400);
        Point p2 = new Point(900,300);
        Visualization vistaPlanta = new Visualization (this, false, canvas2,d2,p2);
        vistaPlanta.setVisible(true);

        String ruta = "/audio/Ambiente.mp3";
        sonidoAmbiente = new Sonido(ruta);
        
        if(!soundCheck.isSelected())
        {
            sonidoAmbiente.ReproducirMP3();
        }
        else
        {
            sonidoAmbiente.getPlayer().close();
        }
        
        pack();
    }
    

    /**
    * This method is called from within the constructor to initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is always
    * regenerated by the Form Editor.
    */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        camsGroup = new javax.swing.ButtonGroup();
        lightsPanel = new javax.swing.JPanel();
        lightSol = new javax.swing.JCheckBox();
        lightPrincipal = new javax.swing.JCheckBox();
        lightSecundaria = new javax.swing.JCheckBox();
        camsPanel = new javax.swing.JPanel();
        camGeneral = new javax.swing.JRadioButton();
        camLuna = new javax.swing.JRadioButton();
        camNave = new javax.swing.JRadioButton();
        exitApp = new javax.swing.JButton();
        soundCheck = new javax.swing.JCheckBox();
        fondoLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Control");
        setMaximumSize(new java.awt.Dimension(405, 240));
        setMinimumSize(new java.awt.Dimension(405, 240));
        setPreferredSize(new java.awt.Dimension(405, 245));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lightsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(null, "Luces", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 12), java.awt.Color.white), "Luces", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 12), java.awt.Color.white)); // NOI18N
        lightsPanel.setOpaque(false);

        lightSol.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        lightSol.setForeground(new java.awt.Color(255, 255, 255));
        lightSol.setSelected(true);
        lightSol.setText("Solar");
        lightSol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lightSolActionPerformed(evt);
            }
        });
        lightsPanel.add(lightSol);

        lightPrincipal.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        lightPrincipal.setForeground(new java.awt.Color(255, 255, 255));
        lightPrincipal.setSelected(true);
        lightPrincipal.setText("Principal");
        lightPrincipal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lightPrincipalActionPerformed(evt);
            }
        });
        lightsPanel.add(lightPrincipal);

        lightSecundaria.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        lightSecundaria.setForeground(new java.awt.Color(255, 255, 255));
        lightSecundaria.setSelected(true);
        lightSecundaria.setText("Secundaria");
        lightSecundaria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lightSecundariaActionPerformed(evt);
            }
        });
        lightsPanel.add(lightSecundaria);

        getContentPane().add(lightsPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -1, 400, 70));

        camsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cámaras", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 12), java.awt.Color.white), "Cámaras", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 12), java.awt.Color.white)); // NOI18N
        camsPanel.setOpaque(false);

        camsGroup.add(camGeneral);
        camGeneral.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        camGeneral.setForeground(new java.awt.Color(255, 255, 255));
        camGeneral.setSelected(true);
        camGeneral.setText("General");
        camGeneral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                camGeneralActionPerformed(evt);
            }
        });
        camsPanel.add(camGeneral);

        camsGroup.add(camLuna);
        camLuna.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        camLuna.setForeground(new java.awt.Color(255, 255, 255));
        camLuna.setText("Luna");
        camLuna.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                camLunaActionPerformed(evt);
            }
        });
        camsPanel.add(camLuna);

        camsGroup.add(camNave);
        camNave.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        camNave.setForeground(new java.awt.Color(255, 255, 255));
        camNave.setText("Nave");
        camNave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                camNaveActionPerformed(evt);
            }
        });
        camsPanel.add(camNave);

        getContentPane().add(camsPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 400, 69));

        exitApp.setForeground(new java.awt.Color(255, 255, 255));
        exitApp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/botonSalir001.png"))); // NOI18N
        exitApp.setText("Salir");
        exitApp.setToolTipText("");
        exitApp.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        exitApp.setContentAreaFilled(false);
        exitApp.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        exitApp.setMaximumSize(new java.awt.Dimension(125, 38));
        exitApp.setMinimumSize(new java.awt.Dimension(125, 38));
        exitApp.setPreferredSize(new java.awt.Dimension(125, 38));
        exitApp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitAppActionPerformed(evt);
            }
        });
        getContentPane().add(exitApp, new org.netbeans.lib.awtextra.AbsoluteConstraints(164, 160, 80, 40));

        soundCheck.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        soundCheck.setForeground(new java.awt.Color(255, 255, 255));
        soundCheck.setText("Sin Sonido");
        soundCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                soundCheckActionPerformed(evt);
            }
        });
        getContentPane().add(soundCheck, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 190, -1, -1));

        fondoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/fondoMenu005a.jpg"))); // NOI18N
        getContentPane().add(fondoLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 220));

        pack();
    }// </editor-fold>//GEN-END:initComponents

  private void lightPrincipalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lightPrincipalActionPerformed
    // TODO add your handling code here:
    universe.setLightsOnOff(2, lightPrincipal.isSelected());
  }//GEN-LAST:event_lightPrincipalActionPerformed

  private void lightSecundariaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lightSecundariaActionPerformed
    // TODO add your handling code here:
    universe.setLightsOnOff(3, lightSecundaria.isSelected());
  }//GEN-LAST:event_lightSecundariaActionPerformed

  private void exitAppActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitAppActionPerformed
        // TODO add your handling code here:
        if(!soundCheck.isSelected())
        {
            String ruta = "/audio/Salir3.mp3";
            Sonido sonido = new Sonido(ruta);
            sonido.ReproducirMP3();
            delay1Second();
        }
        closeApp(0);
  }//GEN-LAST:event_exitAppActionPerformed

    private void lightSolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lightSolActionPerformed
        // TODO add your handling code here:
        universe.setLightsOnOff(1, lightSol.isSelected());
    }//GEN-LAST:event_lightSolActionPerformed

    private void soundCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_soundCheckActionPerformed
        // TODO add your handling code here:
        if(!soundCheck.isSelected())
        {
            sonidoAmbiente.ReproducirMP3();
        }
        else
        {
            sonidoAmbiente.getPlayer().close();
        }
    }//GEN-LAST:event_soundCheckActionPerformed

    private void camLunaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_camLunaActionPerformed
        if(ac2==false){
            if(ac1==true){
                cam.desactivar();
            }
            if(ac3==true){
                cam3.desactivar();
            }
            if(ac2==true){
                
            }
            cam2.activar();
            ac1=false;
            ac2=true;
            ac3=false;
        }
    
    }//GEN-LAST:event_camLunaActionPerformed

    private void camGeneralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_camGeneralActionPerformed
          if(ac1==false){
              if(ac2==true){
                  cam2.desactivar();
              }
              if(ac3==true){
                  cam3.desactivar();
              }
              if(ac1==true){
                  
              }
            cam.activar();
            ac1=true;
            ac2=false;
            ac3=false;
        }
    
    }//GEN-LAST:event_camGeneralActionPerformed

    private void camNaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_camNaveActionPerformed
        if(ac3==false){
            if(ac1==true){
                cam.desactivar();
            }
            if(ac2==true){
                cam2.desactivar();
            }
            if(ac3==true){
                
            }
            cam3.activar();
            ac1=false;
            ac2=false;
            ac3=true;
        }
    }//GEN-LAST:event_camNaveActionPerformed

    public void showWindow () 
    {
        setVisible (true);
    }

    void closeApp (int code) 
    {
        universe.closeApp(code);
    }
    
    void delay1Second()
    {
        try
        {
            Thread.sleep(1000);
        }
        catch (InterruptedException e){}
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton camGeneral;
    private javax.swing.JRadioButton camLuna;
    private javax.swing.JRadioButton camNave;
    private javax.swing.ButtonGroup camsGroup;
    private javax.swing.JPanel camsPanel;
    private javax.swing.JButton exitApp;
    private javax.swing.JLabel fondoLabel;
    private javax.swing.JCheckBox lightPrincipal;
    private javax.swing.JCheckBox lightSecundaria;
    private javax.swing.JCheckBox lightSol;
    private javax.swing.JPanel lightsPanel;
    private javax.swing.JCheckBox soundCheck;
    // End of variables declaration//GEN-END:variables
}
